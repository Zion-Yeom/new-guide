!(function (e, t) {
    'object' == typeof exports && 'undefined' != typeof module
        ? t(exports, require('vue'), require('vrix.js'))
        : 'function' == typeof define && define.amd
          ? define(['exports', 'vue', 'vrix.js'], t)
          : t(((e = 'undefined' != typeof globalThis ? globalThis : e || self).vrix = {}), e.vue, e.vrix_js);
})(this, function (e, t, n) {
    'use strict';
    var o = function (e, t) {
        return (
            (o =
                Object.setPrototypeOf ||
                ({__proto__: []} instanceof Array &&
                    function (e, t) {
                        e.__proto__ = t;
                    }) ||
                function (e, t) {
                    for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                }),
            o(e, t)
        );
    };
    var r = function () {
        return (
            (r =
                Object.assign ||
                function (e) {
                    for (var t, n = 1, o = arguments.length; n < o; n++) for (var r in (t = arguments[n])) Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                    return e;
                }),
            r.apply(this, arguments)
        );
    };
    function i(e, t, n) {
        if (n || 2 === arguments.length) for (var o, r = 0, i = t.length; r < i; r++) (!o && r in t) || (o || (o = Array.prototype.slice.call(t, 0, r)), (o[r] = t[r]));
        return e.concat(o || Array.prototype.slice.call(t));
    }
    var a = (function () {
        function e(e) {
            var t = this;
            (this.wrapper = e),
                Object.defineProperty(this.element, '__wrapper', {
                    get: function () {
                        return t;
                    }
                });
        }
        return (
            Object.defineProperty(e.prototype, 'instance', {
                get: function () {
                    return this.wrapper.vnode.component.proxy;
                },
                enumerable: !1,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, 'element', {
                get: function () {
                    return this.wrapper.vnode.el;
                },
                enumerable: !1,
                configurable: !0
            }),
            (e.prototype.destroy = function () {
                t.render(null, this.wrapper.container);
            }),
            (e.factory = function (e, n, o) {
                return (function (e, n, o) {
                    var i = e.$ || e;
                    n.__setup && (n = t.defineComponent(r({}, n)));
                    var a = n.__setup || n.setup;
                    (n.__setup = a),
                        (n.setup = function (e, n) {
                            if (((t.getCurrentInstance().parent = i), a)) return a(e, n);
                        });
                    var l = function (e) {
                        var o = e.length > 0 ? e[0] : {},
                            a = t.createVNode(n, o, r({}, i.slots)),
                            l = document.createElement('template');
                        return (l.className = 'wrapper'), i.appContext && (a.appContext = i.appContext), t.render(a, l), {vnode: a, container: l};
                    };
                    return function () {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        return new o(l(e));
                    };
                })(e, n, o);
            }),
            e
        );
    })();
    function l(e, n) {
        var o = !!e.invalidateItem,
            r = !1;
        if (o) {
            var i = function (e) {
                r = 'render-updating' === e.type;
            };
            e.addEventListener('render-updating', i), e.addEventListener('render-update', i);
        }
        return {
            itemTemplate: function (t) {
                var i = t.item,
                    a = t.index,
                    l = n({item: i, index: a, nativeInstance: e, initState: t});
                return (
                    o &&
                        l.onUpdated(function () {
                            r || e.invalidateItem(t.item);
                        }),
                    l.element
                );
            },
            hookRenderElement: function (e) {
                return (
                    e.element.__wrapper.prepare(e),
                    new Promise(function (n) {
                        t.queuePostFlushCb(function () {
                            n(e.element);
                        });
                    })
                );
            },
            hookFreeElement: function (e) {
                var t;
                null === (t = e.element.__wrapper) || void 0 === t || t.destroy();
            }
        };
    }
    function u() {
        return {
            item: {type: [String, Number, Object]},
            index: {type: Number},
            nativeInstance: {type: Object},
            initState: {
                type: Object,
                default: function () {
                    return {};
                }
            }
        };
    }
    function s(e) {
        t.getCurrentInstance().render = e;
    }
    var c = t.defineComponent({
            name: 'VxListItem',
            props: r({}, u()),
            setup: function (e, n) {
                var o = t.ref(e.initState);
                return (
                    s(function () {
                        var e = [];
                        return n.slots.default && o.value && e.push(n.slots.default(o.value)), t.h('div', e);
                    }),
                    {state: o}
                );
            },
            prepare: function (e) {
                this.state = e;
            }
        }),
        d = (function (e) {
            function n(t) {
                return e.call(this, t) || this;
            }
            return (
                (function (e, t) {
                    if ('function' != typeof t && null !== t) throw new TypeError('Class extends value ' + String(t) + ' is not a constructor or null');
                    function n() {
                        this.constructor = e;
                    }
                    o(e, t), (e.prototype = null === t ? Object.create(t) : ((n.prototype = t.prototype), new n()));
                })(n, e),
                (n.prototype.onUpdated = function (e) {
                    this.releaseOnUpdate = t.onUpdated(e, this.instance._);
                }),
                (n.prototype.onMounted = function (e) {
                    this.releaseOnMount = t.onMounted(e, this.instance._);
                }),
                (n.prototype.prepare = function (e) {
                    var t;
                    null === (t = this.instance._.type.prepare) || void 0 === t || t.apply(this.instance, [e]);
                }),
                (n.prototype.destroy = function () {
                    e.prototype.destroy.call(this), this.releaseOnUpdate, this.releaseOnMount;
                }),
                n
            );
        })(a),
        p = ['scrollTarget', 'chipTemplate', 'items'];
    function f(e, o, r) {
        var i = function (t) {
                return e.$emit(t.type, t);
            },
            a = Object.keys(r.options).reduce(
                function (e, t) {
                    var n = r.options[t];
                    void 0 !== n && (e[p.indexOf(t) >= 0 ? 'post' : 'pre'][t] = n);
                    return e;
                },
                {pre: {}, post: {}}
            );
        return (
            r.events.forEach(function (e) {
                return o.addEventListener(e, i);
            }),
            o.setOptions(a.pre),
            t.onMounted(function () {
                o instanceof n.Popup || o.mount(e.$el, a.post);
            }),
            t.onUnmounted(function () {
                r.events.forEach(function (e) {
                    return o.removeEventListener(e, i);
                }),
                    o.destroy();
            }),
            null
        );
    }
    function m(e, n, o) {
        void 0 === o && (o = []);
        var r = t.toRefs(n),
            i = Object.keys(r).map(function (n) {
                return o.indexOf(n) >= 0
                    ? t.watchEffect(
                          function () {
                              var t = r[n].value;
                              e[n] != t && (e[n] = t);
                          },
                          {flush: 'post'}
                      )
                    : t.watch(r[n], function (t, o) {
                          try {
                              n in e && e[n] != t && (e[n] = t);
                          } catch (e) {
                              console.warn(e);
                          }
                      });
            });
        return function () {
            i.forEach(function (e) {
                return e();
            });
        };
    }
    function v(e, n, o, r, i) {
        var a = t.getCurrentInstance(),
            l = t.ref(e[n]),
            u = t.computed(function () {
                if (!(n in e)) return !1;
                var t = a.vnode.props;
                return !!(t && n in t && 'onUpdate:'.concat(n) in t);
            }),
            s = t.computed({
                get: function () {
                    return u.value ? e[n] : l.value;
                },
                set: function (e) {
                    l.value !== e && ((l.value = e), null == a || a.emit('update:'.concat(n), e));
                }
            });
        t.watch(
            s,
            function (e) {
                if (a.isMounted) void 0 === e && (e = null), o[r] != e && (o[r] = e);
                else {
                    if (void 0 === e) return;
                    t.onMounted(function () {
                        o[r] != e && (o[r] = e);
                    });
                }
            },
            {immediate: !0, flush: 'post'}
        );
        var c = function () {
            return (s.value = o[r]);
        };
        return (
            (Array.isArray(i) ? i : [i]).forEach(function (e) {
                o.addEventListener(e, c);
            }),
            s
        );
    }
    var h = ['collection-change', 'selection-changing', 'selection-change'],
        g = {
            modelValue: {type: [Array, Object, Number, String]},
            allowMultiple: {type: Boolean, default: !1},
            requireSelection: {type: Boolean, default: !1},
            valueField: {type: String},
            selectedItem: {type: [Object, Number, String]},
            selectedItems: {type: Array},
            useLazyValue: {type: Boolean, default: !0}
        };
    function y(e, t) {
        v(e, 'modelValue', t, 'selected'.concat(null != e.valueField ? 'Value' : 'Item').concat(e.allowMultiple ? 's' : ''), 'selection-change'),
            v(e, 'selectedItem', t, 'selectedItem', 'selection-change'),
            v(e, 'selectedItems', t, 'selectedItems', 'selection-change');
    }
    var b = Symbol.for('ListInstance'),
        x = i(i([], h, !0), ['item-down', 'item-click', 'scroll'], !1),
        I = {
            items: {type: Array},
            labelField: {type: String, default: 'label'},
            rowCount: {type: Number, default: 0},
            scrollTarget: {
                type: [String, HTMLElement],
                validator: function (e) {
                    return !!e;
                }
            }
        },
        C = t.defineComponent({
            name: 'VxList',
            emits: i(i([], x, !0), ['update:modelValue', 'update:selectedItem', 'update:selectedItems'], !1),
            props: r(r({}, g), I),
            setup: function (e) {
                var o = t.getCurrentInstance(),
                    i = new n.List(),
                    u = a.factory(o, c, d),
                    p = t.computed(function () {
                        return (e.items && i.collection) || null;
                    });
                return (
                    m(i, e),
                    f(o.proxy, i, {events: x, options: r(r(r({}, e), {resizable: !0, useAsync: !0}), l(i, u))}),
                    y(e, i),
                    s(function () {
                        return t.h('div', {class: 'x-list-wrap'});
                    }),
                    t.provide(b, {
                        list: i,
                        itemToLabel: function (t) {
                            return n.util.getValue(t, e.labelField);
                        }
                    }),
                    {collection: p, nativeInstance: i}
                );
            },
            methods: {
                scrollToIndex: function (e) {
                    this.nativeInstance.scrollToIndex(e);
                },
                invalidate: function () {
                    this.nativeInstance.invalidate();
                }
            }
        }),
        V = t.defineComponent({
            name: 'VxTreeItem',
            props: r({}, u()),
            setup: function (e, n) {
                var o = t.inject(N),
                    i = t.ref(e.initState),
                    a = t.computed(function () {
                        return o.itemToLabel(i.value.item);
                    }),
                    l = function (t) {
                        e.nativeInstance.toggleNode(t);
                    };
                return (
                    s(function () {
                        var o = [];
                        if (n.slots.default && i.value) o.push(n.slots.default(r(r({}, i.value), {hookToggle: l})));
                        else {
                            var u = t.h(
                                    'button',
                                    {
                                        class: 'x-toggle',
                                        onMousedown: function (e) {
                                            e.preventDefault();
                                        },
                                        onClick: function (t) {
                                            t.preventDefault(), e.nativeInstance.toggleNode(i.value.item);
                                        }
                                    },
                                    [t.h('i', {class: 'x-toggle-icon'})]
                                ),
                                s = t.h('div', {class: 'x-label'}, a.value);
                            o.push(u, s);
                        }
                        return t.h('div', o);
                    }),
                    {state: i}
                );
            },
            prepare: function (e) {
                this.state = e;
            }
        }),
        N = Symbol.for('TreeInstance'),
        w = i(i([], x, !0), ['node-change'], !1),
        O = t.defineComponent({
            name: 'VxTree',
            emits: i(i([], w, !0), ['update:modelValue', 'update:selectedItem', 'update:selectedItems'], !1),
            props: r(r(r({}, g), I), {childrenField: {type: String, default: 'children'}, autoExpandLevel: {type: Number, default: 0}}),
            setup: function (e) {
                var o = t.getCurrentInstance(),
                    i = new n.Tree(),
                    u = a.factory(o, V, d),
                    c = t.computed(function () {
                        return (e.items && i.collection) || null;
                    });
                return (
                    m(i, e),
                    f(o.proxy, i, {events: w, options: r(r(r({}, e), {resizable: !0, useAsync: !0}), l(i, u))}),
                    y(e, i),
                    s(function () {
                        return t.h('div', {class: 'x-tree-wrap'});
                    }),
                    t.provide(N, {
                        list: i,
                        itemToLabel: function (t) {
                            return n.util.getValue(t, e.labelField);
                        }
                    }),
                    {collection: c, nativeInstance: i}
                );
            },
            methods: {
                scrollToIndex: function (e) {
                    this.nativeInstance.scrollToIndex(e);
                },
                invalidate: function () {
                    this.nativeInstance.invalidate();
                },
                getParentNode: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.getParentNode(e);
                },
                getAncestorNodes: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.getAncestorNodes(e);
                },
                getDescendantNodes: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.getDescendantNodes(e);
                },
                getSiblingNodes: function (e) {
                    var t = this.getParentNode(e);
                    return this.getChildren(t);
                },
                getChildren: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.getChildren(e);
                },
                hasChildren: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.hasChildren(e);
                },
                addNode: function (e, t) {
                    var n;
                    return null === (n = this.collection) || void 0 === n ? void 0 : n.addNode(e, t);
                },
                addNodeAt: function (e, t, n) {
                    var o;
                    return null === (o = this.collection) || void 0 === o ? void 0 : o.addNodeAt(e, t, n);
                },
                addNodes: function (e, t) {
                    var n;
                    return null === (n = this.collection) || void 0 === n ? void 0 : n.addNodes(e, t);
                },
                addNodesAt: function (e, t, n) {
                    var o;
                    return null === (o = this.collection) || void 0 === o ? void 0 : o.addNodesAt(e, t, n);
                },
                removeNode: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.removeNode(e);
                },
                contains: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.contains(e);
                },
                isExpandedNode: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.isExpandedNode(e);
                },
                expandNode: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.expandNode(e);
                },
                expandAll: function () {
                    var e;
                    null === (e = this.collection) || void 0 === e || e.expandAll();
                },
                collapseNode: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.collapseNode(e);
                },
                collapseAll: function () {
                    var e;
                    null === (e = this.collection) || void 0 === e || e.collapseAll();
                },
                toggleNode: function (e) {
                    this.isExpandedNode(e) ? this.collapseNode(e) : this.expandNode(e);
                },
                setExpandedNodes: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.setExpandedNodes(e);
                },
                getExpandedNodes: function () {
                    var e;
                    return null === (e = this.collection) || void 0 === e ? void 0 : e.getExpandedNodes();
                },
                getNodeLevel: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.getNodeLevel(e);
                },
                isBranchNode: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.isBranchNode(e);
                },
                isLeafNode: function (e) {
                    var t;
                    return null === (t = this.collection) || void 0 === t ? void 0 : t.isLeafNode(e);
                },
                find: function (e, t, n) {
                    var o;
                    return void 0 === t && (t = null), void 0 === n && (n = !1), null === (o = this.collection) || void 0 === o ? void 0 : o.find(e, t, n);
                },
                findOne: function (e, t, n) {
                    var o;
                    return void 0 === t && (t = null), void 0 === n && (n = !1), null === (o = this.collection) || void 0 === o ? void 0 : o.findOne(e, t, n);
                }
            }
        }),
        S = Symbol.for('NativePopupInstance'),
        T = ['open', 'close', 'cancel-open', 'cancel-close'],
        E = {
            modelValue: {type: Boolean, default: !1},
            modal: {type: Boolean, default: !1},
            contentAlign: {type: String},
            contentByGlobal: {type: String},
            anchor: {type: [String, HTMLElement]},
            anchorAlign: {type: String},
            offsetX: {type: Number, default: 0},
            offsetY: {type: Number, default: 0},
            lockOutside: {type: Boolean, default: !1},
            alwaysOnTop: {type: Boolean, default: !1},
            priority: {type: Number, default: 0},
            nested: {type: Boolean, default: !0},
            autoFocus: {type: Boolean, default: !0},
            hitAreas: {
                type: Array,
                default: function () {
                    return [];
                }
            },
            closeOnOutsideDown: {type: Boolean, default: !1},
            closeOnEscape: {type: Boolean, default: !1},
            closeOnEvents: {type: Array, default: ['close']},
            usePreRender: {type: Boolean, default: !1}
        },
        k = t.defineComponent({
            name: 'VxPopup',
            emits: i(i([], T, !0), ['update:modelValue'], !1),
            props: r({}, E),
            setup: function (e, o) {
                var i = t.getCurrentInstance(),
                    a = new n.Popup(),
                    l = t.ref(!1);
                if (!e.usePreRender)
                    var u = t.watch(
                        function () {
                            return e.modelValue;
                        },
                        function (e) {
                            e &&
                                ((l.value = !0),
                                t.nextTick().then(function () {
                                    return u();
                                }));
                        },
                        {immediate: !0}
                    );
                function c(e) {
                    return (l.value = !0), a.open(e), this;
                }
                function d(e) {
                    return a.close(e), this;
                }
                return (
                    v(e, 'modelValue', a, 'isOpened', T),
                    m(a, e),
                    f(i.proxy, a, {
                        events: T,
                        options: r(r({}, e), {
                            content: new Promise(function (n, o) {
                                t.onMounted(function () {
                                    if (e.usePreRender || l.value) n(i.proxy.$el.firstElementChild);
                                    else
                                        var o = t.watch(
                                            l,
                                            function (e) {
                                                e && (n(i.proxy.$el.firstElementChild), o());
                                            },
                                            {immediate: !0, flush: 'post'}
                                        );
                                });
                            })
                        })
                    }),
                    t.provide(S, a),
                    s(function () {
                        return e.usePreRender || l.value ? t.h('template', o.slots.default()) : t.h('template');
                    }),
                    {
                        nativeInstance: a,
                        get isOpened() {
                            return a.isOpened;
                        },
                        opening: function (e) {
                            return a.opening(e), this;
                        },
                        opened: function (e) {
                            return a.opened(e), this;
                        },
                        closing: function (e) {
                            return a.closing(e), this;
                        },
                        closed: function (e) {
                            return a.closed(e), this;
                        },
                        open: c,
                        close: d,
                        toggle: function (e) {
                            return a.isOpened ? d(e) : c(e);
                        },
                        invalidate: function () {
                            a.invalidate();
                        },
                        destroy: function () {
                            a.destroy();
                        }
                    }
                );
            }
        }),
        A = {
            name: 'VxSuggestItem',
            props: r({}, u()),
            setup: function (e) {
                return {state: t.reactive(e.initState)};
            },
            methods: {
                genLabel: function () {
                    return this.$slots.suggest ? this.$slots.suggest(this.state) : t.h('span', {innerHTML: this.state.html});
                },
                genContent: function () {
                    return this.state.item ? [this.genLabel()] : [];
                }
            },
            render: function () {
                return t.h('div', this.genContent());
            },
            prepare: function (e) {
                for (var t in e) 'element' !== t && (this.state[t] = e[t]);
            }
        },
        P = t.defineComponent({
            name: 'VxSuggestStatus',
            props: {slotName: {type: String}},
            setup: function (e, n) {
                var o = n.slots[e.slotName],
                    r = t.inject(L);
                s(function () {
                    return t.h('div', o(r.inputValue.value));
                });
            }
        }),
        L = Symbol.for('AutocompleteInstance'),
        j = i(i([], h, !0), ['suggest-select', 'suggest-opening', 'suggest-closing', 'suggest-open', 'suggest-close', 'suggest-caret-change', 'value-change', 'focusin', 'focusout'], !1),
        _ = {
            label: {type: String, default: ''},
            placeholder: {type: String},
            labelField: {type: [String, Function], default: null},
            closeOnSelect: {type: Boolean, default: !0},
            closeOnFocusOut: {type: Boolean, default: !0},
            closeOnOutsideDown: {type: Boolean, default: !0},
            inputValue: {type: String, default: ''},
            minChar: {type: Number, default: 0},
            clearable: {type: Boolean, default: !1}
        },
        D = {
            suggestSource: {type: [Array, Function, Promise]},
            suggestCount: {type: Number, default: 6},
            hookSuggestItems: {
                type: Function,
                default: function (e) {
                    return t.isProxy(e) || (e = t.reactive(e)), e;
                }
            }
        };
    function B(e) {
        return {
            clear: function () {
                e.clear();
            }
        };
    }
    function F(e, n) {
        var o = e.slots,
            r = o.nodata,
            i = o.progress;
        if (r || i) {
            var l = a.factory(e, P, a);
            t.onMounted(function () {
                r && (n.suggestNodataStateTemplate = l({slotName: 'nodata'}).element), i && (n.suggestProgressStateTemplate = l({slotName: 'progress'}).element);
            });
        }
    }
    var R = t.defineComponent({
            name: 'VxAutocomplete',
            emits: i(i([], j, !0), ['update:modelValue', 'update:selectedItem'], !1),
            props: r(r(r({}, _), D), {modelValue: {type: String}, selectedItem: {type: [String, Number, Object]}}),
            setup: function (e) {
                var o = t.getCurrentInstance(),
                    i = new n.Autocomplete(),
                    u = a.factory(o, A, d),
                    s = l(i.suggestList.setOptions({resizable: !0, useAsync: !0}), u),
                    c = s.itemTemplate,
                    p = s.hookRenderElement,
                    h = s.hookFreeElement;
                m(i, e), f(o.proxy, i, {events: j, options: r(r({}, e), {suggestItemTemplate: c, hookRenderSuggestElement: p, hookFreeSuggestElement: h})});
                var g = v(e, 'modelValue', i, 'inputValue', 'value-change');
                return (
                    v(e, 'selectedItem', i, 'selectedItem', 'selection-change'),
                    t.provide(L, {
                        get instance() {
                            return o;
                        },
                        get inputValue() {
                            return g;
                        }
                    }),
                    F(o, i),
                    r({nativeInstance: i}, B(i))
                );
            },
            methods: {},
            render: function () {
                return t.h('div', {class: 'x-autocomplete-wrap'});
            }
        }),
        M = t.defineComponent({
            name: 'VxChip',
            props: {item: {type: [Object, String, Number]}, nativeInstance: {type: Object}},
            setup: function (e) {
                return {
                    state: t.ref({}),
                    slotProps: t.computed(function () {
                        return {
                            item: e.item,
                            label: e.nativeInstance.itemToLabel(e.item),
                            remove: function () {
                                return e.nativeInstance.removeSelectedItem(e.item);
                            }
                        };
                    })
                };
            },
            methods: {
                genLabel: function () {
                    return t.h('span', {class: 'x-label'}, this.slotProps.label);
                },
                genRemover: function () {
                    return t.h('button', {
                        class: 'x-remover',
                        onMousedown: function (e) {
                            e.preventDefault();
                        },
                        onClick: function (e) {
                            e.preventDefault();
                        }
                    });
                },
                genContent: function () {
                    return this.$slots.chip ? this.$slots.chip(this.slotProps) : this.slotProps.item ? [this.genLabel(), this.genRemover()] : [this.genRemover()];
                }
            },
            render: function () {
                return t.h('div', {class: 'x-select-chip'}, this.genContent());
            }
        }),
        $ = t.defineComponent({
            name: 'VxTokenizer',
            emits: i(i([], j, !0), ['update:modelValue', 'update:selectedItem', 'update:selectedItems', 'update:inputValue'], !1),
            props: r(r(r(r({}, _), D), g), {allowMultiple: {type: Boolean, default: !0}, allowInputValue: {type: Boolean, default: !1}}),
            setup: function (e, o) {
                var i = t.getCurrentInstance(),
                    u = new n.Tokenizer(),
                    s = a.factory(i, A, d),
                    c = a.factory(i, M, d),
                    p = l(u.suggestList.setOptions({resizable: !0, useAsync: !0}), s),
                    h = p.itemTemplate,
                    g = p.hookRenderElement,
                    b = p.hookFreeElement;
                m(u, e),
                    f(i.proxy, u, {
                        events: j,
                        options: r(r({}, e), {
                            chipTemplate: function (e, t) {
                                return c({item: e, nativeInstance: u}).element;
                            },
                            suggestItemTemplate: h,
                            hookRenderSuggestElement: g,
                            hookFreeSuggestElement: b
                        })
                    }),
                    y(e, u);
                var x = v(e, 'inputValue', u, 'inputValue', 'value-change');
                return (
                    t.provide(L, {
                        get instance() {
                            return i;
                        },
                        get inputValue() {
                            return x;
                        }
                    }),
                    F(i, u),
                    r({nativeInstance: u}, B(u))
                );
            },
            render: function () {
                return t.h('div', {class: 'x-tokenizer-wrap'});
            }
        }),
        z = t.defineComponent({
            name: 'VxTextChip',
            props: {item: {type: [String, Number, Object]}, nativeInstance: {type: Object}},
            setup: function (e) {
                return {
                    label: t.computed(function () {
                        return e.nativeInstance.itemToLabel(e.item);
                    })
                };
            },
            methods: {
                genLabel: function () {
                    return t.h('span', {class: 'x-label'}, this.label);
                },
                genContent: function () {
                    return this.item ? (this.$slots.chip ? this.$slots.chip({item: this.item, label: this.label}) : [this.genLabel()]) : [];
                }
            },
            render: function () {
                return t.h('div', {class: 'x-select-text'}, this.genContent());
            }
        }),
        U = Symbol.for('ComboboxInstance'),
        H = t.defineComponent({
            name: 'VxCombobox',
            emits: i(i([], j, !0), ['update:modelValue', 'update:selectedItem', 'update:selectedItems', 'update:inputValue'], !1),
            props: r(r(r({}, _), g), {items: {type: Array}, filterable: {type: Boolean, default: !1}, removable: {type: Boolean, default: !1}}),
            setup: function (e, o) {
                var i = t.getCurrentInstance(),
                    u = new n.Combobox(),
                    s = a.factory(i, A, d),
                    c = a.factory(i, M, d),
                    p = a.factory(i, z, d),
                    h = l(u.suggestList.setOptions({resizable: !0, useAsync: !0}), s),
                    g = h.itemTemplate,
                    b = h.hookRenderElement,
                    x = h.hookFreeElement;
                return (
                    m(u, e),
                    f(i.proxy, u, {
                        events: j,
                        options: r(r({}, e), {
                            chipTemplate: function (e, t) {
                                return c({item: e, nativeInstance: u}).element;
                            },
                            singleChipTemplate: function (e, t) {
                                return p({item: e, nativeInstance: u}).element;
                            },
                            suggestItemTemplate: g,
                            hookRenderSuggestElement: b,
                            hookFreeSuggestElement: x
                        })
                    }),
                    y(e, u),
                    v(e, 'inputValue', u, 'inputValue', 'value-change'),
                    t.provide(U, {}),
                    r({nativeInstance: u}, B(u))
                );
            },
            render: function () {
                return t.h('div', {class: 'x-combobox-wrap'});
            }
        }),
        q = t.defineComponent({
            name: 'VxDateChooserItem',
            props: r({}, u()),
            setup: function (e) {
                return {state: t.reactive(e.initState)};
            },
            methods: {
                genContent: function () {
                    var e = [];
                    return this.$slots.default && this.state.item && e.push(this.$slots.default(this.state)), e;
                }
            },
            render: function () {
                return t.h('div', this.genContent());
            },
            prepare: function (e) {
                for (var t in e) 'element' !== t && (this.state[t] = e[t]);
            }
        }),
        G = Symbol.for('DateChooserInstance'),
        X = ['state-change', 'item-down', 'item-click', 'selection-changing', 'selection-change'],
        Y = {modelValue: {type: [Date, Object]}, type: {type: String, default: 'day'}, today: {type: Date, default: new Date()}, allowRange: {type: Boolean, default: !1}, allowDate: {type: Function}},
        J = t.defineComponent({
            name: 'VxDateChooser',
            emits: i(i([], X, !0), ['update:modelValue'], !1),
            props: r({}, Y),
            setup: function (e) {
                var o = t.getCurrentInstance(),
                    i = new n.DateChooser(),
                    u = null;
                if (o.slots.default) {
                    var s = a.factory(o, q, d);
                    u = r(r(r({}, e), l(i, s)), {useAsync: !0});
                } else u = e;
                return (
                    m(i, e), f(o.proxy, i, {events: X, options: u}), v(e, 'modelValue', i, e.allowRange ? 'selectedRange' : 'selectedDate', 'selection-change'), t.provide(G, {}), {nativeInstance: i}
                );
            },
            methods: {
                getState: function () {
                    return this.nativeInstance.state;
                },
                reset: function () {
                    return this.nativeInstance.reset();
                },
                setCurrentDate: function (e) {
                    return this.nativeInstance.setCurrentDate(e);
                }
            },
            render: function () {
                return t.h('div', {class: 'x-date-chooser-wrap'});
            }
        }),
        K = Symbol.for('DatePickerInstance'),
        Q = i(i([], X, !0), ['date-picker-opening', 'date-picker-closing', 'date-picker-open', 'date-picker-close'], !1),
        W = t.defineComponent({
            name: 'VxDatePicker',
            emits: i(i([], Q, !0), ['update:modelValue'], !1),
            props: r(r({}, Y), {label: {type: String, default: ''}, clearable: {type: Boolean, default: !1}}),
            setup: function (e) {
                var o = t.getCurrentInstance(),
                    i = new n.DatePicker(),
                    u = null;
                if (o.slots.default) {
                    var s = l(i, a.factory(o, q, d)),
                        c = s.itemTemplate,
                        p = s.hookRenderElement,
                        h = s.hookFreeElement;
                    u = r(r({}, e), {dateChooserItemTemplate: c, dateChooserHookRenderElement: p, dateChooserHookFreeElement: h});
                } else u = e;
                return (
                    m(i, e), f(o.proxy, i, {events: Q, options: u}), v(e, 'modelValue', i, e.allowRange ? 'selectedRange' : 'selectedDate', 'selection-change'), t.provide(K, {}), {nativeInstance: i}
                );
            },
            methods: {
                reset: function () {
                    return this.nativeInstance.reset();
                },
                setCurrentDate: function (e) {
                    return this.nativeInstance.setCurrentDate(e);
                }
            },
            render: function () {
                return t.h('div', {class: 'x-date-picker-wrap'});
            }
        }),
        Z = Object.freeze({__proto__: null, VxList: C, VxTree: O, VxPopup: k, VxAutocomplete: R, VxTokenizer: $, VxCombobox: H, VxDateChooser: J, VxDatePicker: W});
    (e.VxAutocomplete = R),
        (e.VxCombobox = H),
        (e.VxDateChooser = J),
        (e.VxDatePicker = W),
        (e.VxList = C),
        (e.VxPopup = k),
        (e.VxTokenizer = $),
        (e.VxTree = O),
        (e.default = function (e) {
            Object.entries(Z).forEach(function (t) {
                var n = t[0],
                    o = t[1];
                e.component(n, o);
            });
        }),
        Object.defineProperty(e, '__esModule', {value: !0});
});
